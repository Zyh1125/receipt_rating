{"version":3,"sources":["components/platformCard.tsx","Views/IosPage.tsx","Views/AndroidPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PlatformCard","props","useState","window","innerHeight","size","setSize","classes","makeStyles","theme","createStyles","logo","width","breakpoints","down","cardContainer","overflow","height","flex","card","padding","display","flexDirection","marginLeft","marginRight","marginBottom","justifyContent","alignItems","borderColor","borderWidth","borderStyle","cardHeading","marginTop","useStyles","resizeHanlder","useEffect","addEventListener","className","onClick","onPress","Paper","elevation","src","imageUrl","alt","heading","content","textAlign","downloadBtn","paddingTop","paddingBottom","paddingLeft","paddingRight","IosPage","Button","color","variant","startIcon","GetApp","href","target","AndroidPage","method","action","link","document","createElement","download","click","OpenInNew","root","flexGrow","app","menuButton","spacing","title","logoImg","cards","flexWrap","App","selectedMenu","setSelectedMenu","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","ArrowBack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.436fb479.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\n\ninterface IPlatformCard {\n    imageUrl: string,\n    heading: string,\n    onPress: () => void\n}\n\nfunction PlatformCard(props: IPlatformCard) {\n\n    const [size, setSize] = useState<number>(window.innerHeight)\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            logo: {\n                width: '50%',\n                [theme.breakpoints.down('sm')]: {\n                    width: '30%'\n                },\n            },\n            cardContainer: {\n                overflow: 'hidden',\n                width: '50%',\n                height: size - 200,\n                flex: 1,\n                [theme.breakpoints.down('sm')]: {\n                    width: '100%',\n                    height: size / 2 - 150,\n                },\n                position: 'relative'\n            },\n            card: {\n                padding: 20,\n                display: 'flex',\n                flexDirection: 'column',\n                marginLeft: 50,\n                marginRight: 50,\n                marginBottom: 50,\n                height: '90%',\n                justifyContent: 'center',\n                alignItems: 'center',\n                '&:hover': {\n                    borderColor: '#C42A2D',\n                    borderWidth: 3,\n                    borderStyle: 'solid',\n                    padding: 17,\n                },\n                [theme.breakpoints.down('sm')]: {\n                    '&:hover': {\n                        borderWidth: 0,\n                    },\n                    '&:active': {\n                        borderColor: '#C42A2D',\n                        borderWidth: 3,\n                        borderStyle: 'solid',\n                        padding: 17,\n                    }\n                },\n            },\n            cardHeading: {\n                marginTop: 40,\n                [theme.breakpoints.down('sm')]: {\n                    marginTop: 20\n                },\n                textAlign: 'center'\n            }\n        }),\n    );\n\n    const classes = useStyles();\n\n    const resizeHanlder = () => {\n        const height = window.innerHeight;\n        setSize(height);\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', resizeHanlder);\n    }, []);\n\n    return (\n        <div className={classes.cardContainer} onClick={props.onPress}>\n            <Paper elevation={3} className={classes.card}>\n                <img className={classes.logo} src={props.imageUrl} alt=''></img>\n                <h1 className={classes.cardHeading}>{props.heading}</h1>\n            </Paper>\n        </div>\n    );\n}\n\nexport default PlatformCard;","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { GetApp } from '@material-ui/icons';\n\nfunction IosPage() {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.content}>\n                <h1 className={classes.heading}>Installationsanleitung iOS</h1>\n                <h2 className={classes.heading}>Installiere Test Flight und installiere die App</h2>\n                <Button className={classes.downloadBtn} color='secondary' variant='contained' startIcon={<GetApp />}\n                    href=\"https://testflight.apple.com/join/H7yNkylB\" target=\"_blank\">Installieren</Button>\n                <p><strong>Beachte:</strong> Falls du Testflight noch nicht installiert hast, musst du eventuell nochmals auf den Button klicken.</p>\n            </div>\n        </>\n    );\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        content: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        heading: {\n            textAlign: 'center'\n        },\n        downloadBtn: {\n            paddingTop: 20,\n            paddingBottom: 20,\n            paddingLeft: 30,\n            paddingRight: 30\n        }\n    }),\n);\n\nexport default IosPage;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { GetApp, OpenInNew } from '@material-ui/icons';\n\nfunction AndroidPage() {\n    const classes = useStyles();\n\n    const onDownload = () => {\n        const link = document.createElement('a');\n        link.download = `receipt-rating.apk`;\n        link.href = './assets/receipt-rating.apk';\n        link.click();\n    };\n\n    const onTutorial = () => {\n        const link = document.createElement('a');\n        link.href = 'https://www.heise.de/tipps-tricks/Externe-Apps-APK-Dateien-bei-Android-installieren-so-klappt-s-3714330.html';\n        link.target = '_blank'\n        link.click();\n    }\n\n    return (\n        <>\n            <div className={classes.content}>\n                <h1 className={classes.heading}>Installationsanleitung Android</h1>\n                <h2 className={classes.heading}>1. Downloade die Installationsdatei (Apk)</h2>\n                <form method=\"get\" action=\"file.doc\">\n                    <Button className={classes.downloadBtn} color='secondary' variant='contained' startIcon={<GetApp />}\n                        onClick={onDownload}>Download App</Button>\n                </form>\n                <h2 className={classes.heading}>2. Installiere die Datei</h2>\n                <p><strong>Beachte:</strong> Da standartmäßig Installationen außerhalb des Play Stores blockiert werden,\n                    musst du unter Umständen die Installation aus <strong>unbekannten Quellen aktivieren</strong>. Nach der Installation der\n                    App wird aber empfohlen, diese Einstellung wieder rückgängig zu machen. </p>\n                <form method=\"get\">\n                    <Button className={classes.downloadBtn} color='secondary' variant='outlined' startIcon={<OpenInNew />}\n                        onClick={onTutorial}>Installationsanleitung für Apps außerhalb des Appstores</Button>\n                </form>\n            </div>\n        </>\n    );\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        content: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        heading: {\n            textAlign: 'center'\n        },\n        downloadBtn: {\n            paddingTop: 20,\n            paddingBottom: 20,\n            paddingLeft: 30,\n            paddingRight: 30\n        }\n    }),\n);\n\nexport default AndroidPage;","import { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { Button } from '@material-ui/core';\nimport PlatformCard from './components/platformCard';\nimport IosPage from './Views/IosPage';\nimport { ArrowBack } from '@material-ui/icons';\nimport AndroidPage from './Views/AndroidPage';\n\nfunction App() {\n  const classes = useStyles();\n\n  const [selectedMenu, setSelectedMenu] = useState<string>('None')\n\n  return (\n    <div className={classes.app}>\n      <header className=\"App-header\">\n        <AppBar position=\"fixed\" color='primary'>\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <img className={classes.logoImg} src={'icon/favicon-256x256.png'} alt=\"logo\" />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Nutrition Rating\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </header>\n      <div className={classes.content}>\n        {/* Select Platform */}\n        {selectedMenu === 'None' &&\n          <div className={classes.cards}>\n            <PlatformCard\n              imageUrl={'assets/android_logo.svg'}\n              heading={'Ich habe ein Android Handy'}\n              onPress={() => { setSelectedMenu('android') }}\n            />\n            <PlatformCard\n              imageUrl={'assets/apple_logo.svg'}\n              heading={'Ich habe ein Apple iPhone'}\n              onPress={() => { setSelectedMenu('ios') }}\n            />\n\n          </div>\n        }\n        {(selectedMenu === 'ios' || selectedMenu === 'android') &&\n          <Button color='secondary' variant='outlined' startIcon={<ArrowBack />}\n            onClick={() => setSelectedMenu('None')}>Back</Button>\n        }\n        {selectedMenu === 'ios' &&\n          <IosPage />\n        }\n        {selectedMenu === 'android' &&\n          <AndroidPage />\n        }\n      </div>\n    </div >\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    app: {\n      height: '99vh',\n      overflow: 'hidden',\n      [theme.breakpoints.down('sm')]: {\n        height: '80vh',\n        overflow: 'initial',\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    logoImg: {\n      width: '40px'\n    },\n    content: {\n      marginTop: 70,\n      padding: 20,\n    },\n    cards: {\n      marginTop: 30,\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      width: '100%',\n      [theme.breakpoints.down('sm')]: {\n        flexDirection: 'column'\n      },\n    }\n  }),\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFF',\n    },\n    secondary: {\n      main: '#C42A2D',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}